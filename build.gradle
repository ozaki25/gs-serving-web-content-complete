apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.hidetake.ssh'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'jacoco'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE'
        classpath 'org.hidetake:gradle-ssh-plugin:2.1.2'
    }
}

jar {
    baseName = 'app'
    // version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-devtools'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

springBoot.executable = true
checkstyle.toolVersion = '7.6'
[checkstyleMain, checkstyleTest]*.ignoreFailures = true
[findbugsMain, findbugsTest]*.ignoreFailures = true
jacocoTestReport.reports.xml.enabled true

remotes {
    Spring {
        host = spring_host
        user = 'ec2-user'
        identity = file("${System.properties['user.home']}/jenkins.pem")
        knownHosts = allowAnyHosts
    }
}
task deploy(dependsOn: 'build') << {
    ssh.run {
        session(remotes.Spring) {
            put jar.archivePath.path, "/tmp/"
            executeSudo "sudo mv /tmp/$jar.archiveName /var/spring_sample_development/"
            executeSudo "chmod 500 /var/spring_sample_development/$jar.archiveName"
        }
    }
}

task start << {
    ssh.run {
        session(remotes.Spring) {
            executeSudo "sudo service spring_sample_dev start"
        }
    }
}
task restart << {
    ssh.run {
        session(remotes.Spring) {
            executeSudo "sudo service spring_sample_dev restart"
        }
    }
}
task stop << {
    ssh.run {
        session(remotes.Spring) {
            executeSudo "sudo service spring_sample_dev stop"
        }
    }
}
